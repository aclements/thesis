\def\OP#1{\code{#1}}
\def\INV#1#2#3{\text{\OP{#1}}\ifx?#2?\else(#2)\fi_{#3}}
\def\RES#1#2#3{{#2}_{#3}}
\def\HRESTRICT#1#2{#1|#2}
\def\HIST#1{#1}
\def\SPEC{\mathscr{S}}
\def\STEP{\rightarrow}
\def\TRUE{\textsc{true}}
\def\FALSE{\textsc{false}}
\def\HEAD{\textup{head}}
\def\TAIL{\textup{tail}}
\def\END{\textsc{end}}
\def\EMULATE{\textsc{emulate}}
\def\CONS#1#2{#1\mathbin:#2}
\def\COMMUTE{\textsc{commute}}
\def\THREAD{\textrm{thread}}
\def\OK{\textsc{ok}}
\def\FAIL{\textsc{fail}}
\def\POLL{\textsc{continue}}
\def\ATTH#1#2{#1_{#2}}
\let\ATT\ATTH
\def\REFIMP{\textit{M}}
\def\HCONCAT{\mathbin{||}}
\def\qed{$\square$}

\newdimen\scpdimen
\newcounter{scpnodecounter}
\setcounter{scpnodecounter}{0}
\newcommand*\nextscpnodename{%
   \addtocounter{scpnodecounter}{1}%
   \edef\scpnodename{scpnode\arabic{scpnodecounter}}}
\newif\ifscpspecificthread
\makeatletter
\newif\if@scpresponse
\newcommand*\scpbox[1]{\setbox0\hbox{\textsf{1}}%
    \setbox0\hbox{\hskip-\wd0\textsf{#1}}%
    \ifdim\wd0>\z@\hbox{\textsf{?}}\else\hbox{\textsf{#1}}\fi}
\newcommand*\scpheight[1]{%
  \if1#10pt\else%
   \if2#11.5pt\else%
    \if3#1-1.5pt\else%
     \if4#1-3pt\else 0pt\fi\fi\fi\fi}
\newcommand*\scpcolor[1]{%
  \if1#1red\else%
   \if2#1blue\else%
    \if3#1rgb:violet,4;white,3\else%
     \if4#1violet\else black\fi\fi\fi\fi}
\newcommand*\scpxcolor[1]{%
  \if1#1red!40\else%
   \if2#1blue!40\else%
    \if3#1rgb:green!40,2;black!40,1\else%
     \if4#1violet!40\else black!40\fi\fi\fi\fi}
\newcommand*\@xscpsetup[1]{\edef\@xscpcolor{\scpcolor{#1}}%
  \edef\@xscpheight{\scpheight{#1}}}
\newcommand*\@xxscpsetup[1]{\edef\@xscpcolor{\xscpcolor{#1}}%
  \edef\@xscpheight{\scpheight{#1}}}
\newcommand*\scpt[2]{\@xscpsetup{#2}%
  {\color{\@xscpcolor}\hbox{#1}}}
\newcommand*\scpi[2]{\@xscpsetup{#2}\let\@xscp\@scpshape%
    \ifscpspecificthread\expandafter\if\scpspecificthread#2\else\let\@xscp\@scpshapespace\fi\fi%
    \@scpresponsefalse\@xscp{#1}}
\newcommand*\scpr[2]{\@xscpsetup{#2}\let\@xscp\@scpshape%
    \ifscpspecificthread\expandafter\if\scpspecificthread#2\else\let\@xscp\@scpshapespace\fi\fi%
    \@scpresponsetrue\@xscp{#1}}
\newcommand*\scpir[2]{\scpi{#1}{#2} \scpr{#1}{#2}}
\newcommand*\scpix[2]{\@xxscpsetup{#2}\let\@xscp\@scpshape%
    \ifscpspecificthread\expandafter\if\scpspecificthread#2\else\let\@xscp\@scpshapespace\fi\fi%
    \@scpresponsefalse\@xscp{#1}}
\newcommand*\scprx[2]{\@xxscpsetup{#2}\let\@xscp\@scpshape%
    \ifscpspecificthread\expandafter\if\scpspecificthread#2\else\let\@xscp\@scpshapespace\fi\fi%
    \@scpresponsetrue\@xscp{#1}}
\newcommand*\scpicut[2]{\@xscpsetup{#2}\let\@xscp\@scpcutshape%
    \ifscpspecificthread\expandafter\if\scpspecificthread#2\else\let\@xscp\@scpshapespace\fi\fi%
    \@scpresponsefalse\@xscp{#1}}
\newcommand*\scprcut[2]{\@xscpsetup{#2}\let\@xscp\@scpcutshape%
    \ifscpspecificthread\expandafter\if\scpspecificthread#2\else\let\@xscp\@scpshapespace\fi\fi%
    \@scpresponsetrue\@xscp{#1}}
\newcommand*\scpnode[2]{%
\if@scpresponse\def\@scpcorners{rounded rectangle left arc}\else\def\@scpcorners{rounded rectangle right arc}\fi%
            \node[%
%            shape=circle,%
%            shape=semicircle,shape border rotate=\if@scpresponse 270 \else 90\fi,%
rounded rectangle,\@scpcorners=none,inner ysep=2pt,inner xsep=0.75pt,%
            draw=\@xscpcolor,%
%            inner sep=1pt,%
            text=white,fill=\@xscpcolor,%
%            text=\if@scpresponse #3\else white\fi,%
%            fill=\if@scpresponse white\else#3\fi%
            ] (#1) {\hbox to\scpdimen{\hss \textsf{#2}\hss}};}
\newcommand*\@scpshape[1]{\setbox0\hbox{\small\textsf{N}}\scpdimen=\wd0
    \nextscpnodename
    \raise\@xscpheight\hbox{\tikz[baseline=(\scpnodename.base)]{\scpnode{\scpnodename}{#1}}}}
\newcommand*\@scpcutshape[2]{\setbox0\hbox{\textsf{N}}\scpdimen=\wd0
    \tikz[baseline=(\scpnodename.base)]{\scpnode{\scpnodename}{#1}%
       \draw[color=black!40,very thick]
       ($(\scpnodename.south west)!-0.1!(\scpnodename.north east)$) --
       ($(\scpnodename.south west)!1.1!(\scpnodename.north east)$);}}
\newcommand*\@scpshapespace[1]{\setbox0\hbox{\@scpshape{#1}}\hbox to\wd0{\hfil}}
\newcommand\scpline[1]{\text{\begin{scriptsize}#1\end{scriptsize}}}
\newcommand\scplinerestrict[2]{\scpspecificthreadtrue\edef\scpspecificthread{#1}\scpline{#2}\scpspecificthreadfalse}
\newcommand\scplinerestrictb[2]{\begingroup\def\@scpshapespace##1{\ignorespaces}\scpspecificthreadtrue\edef\scpspecificthread{#1}\scpline{#2}\scpspecificthreadfalse\endgroup}
\newcommand\tupleadj[3]{#1_{#2\gets#3}}
\newcommand\V[1]{\textit{#1}}
\newcommand\COMMENT[1]{\hfill{\small{//~\textit{#1}}}}
\newcommand\NSIMP{m_{\text{ns}}}

% Tuple typesetting
% Adds triangle brackets and spaces commas.  ie $\tup{1,2,3}$
% Arguments can be enclosed in braces or angle brackets
\def\tup{%
  \def\tupInside\tupStart##1,##2\tupEnd{%
    ##1
    \def\tempa{}\def\tempb{##2}
    \ifx\tempa\tempb\else
    ,\;\tupInside\tupStart##2\tupEnd
    \fi}
  \def\tupBraces##1{\left\langle\tupInside\tupStart##1,\tupEnd\right\rangle}
  \def\tupBrackets<##1>{\tupBraces{##1}}
  \@ifnextchar<\tupBrackets\tupBraces}

\newcommand{\integrallycommute}{SI-commute\xspace}
\newcommand{\integrallycommutes}{SI-commutes\xspace}
\newcommand{\integralcommutativity}{SI commutativity\xspace}
\newcommand{\HA}{\ensuremath{X}}
\newcommand{\HB}{\ensuremath{Y}}
\newcommand{\HSUFF}{\ensuremath{Z}}

\makeatother
