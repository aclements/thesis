#!/usr/bin/python

import sys, os, re, json, argparse, subprocess

parser = argparse.ArgumentParser()
parser.add_argument('--xv6', metavar="DIR", help="xv6-scale dir")
parser.add_argument('--commuter', metavar="DIR", help="commuter dir")
parser.add_argument('--mtrace', metavar="DIR", help="mtrace dir")
parser.add_argument('--pk', metavar="DIR", help="pk dir")
args = parser.parse_args()

if not (args.xv6 or args.commuter or args.mtrace or args.pk):
    parser.error("nothing to do")

def wc(root, regexp, exclude=None):
    total = 0
    for dirpath, dirnames, files in os.walk(root):
        assert dirpath.startswith(root)
        for filepath in files:
            if filepath.startswith("."):
                continue
            relpath = os.path.join(dirpath[len(root):].lstrip("/"), filepath)
            if exclude and re.match(exclude, relpath):
                continue
            if re.match(regexp, relpath):
                lines = len(file(os.path.join(dirpath, filepath)).readlines())
                #print "%d\t%s" % (lines, relpath)
                total += lines
    return total

def diff(root, rev, regexp, exclude=None):
    total = 0
    out = subprocess.check_output(["git", "diff", "--numstat", rev], cwd=root)
    for line in out.splitlines():
        add, rm, path = line.split(None, 3)
        if exclude and re.match(exclude, path):
            continue
        if re.match(regexp, path):
            total += int(add) + int(rm)
            #print "%s\t%s\t%s" % (add, rm, path)
    return total

data = json.load(file("const.json"))

if args.xv6:
    data["xv6-loc"] \
        = {"all": wc(args.xv6,
                     r"(bin|include|kernel|lib|libutil|net|stdinc|tools)/.*\.(cc?|hh?|S|py)$",
                     exclude="kernel/acpica|libutil/testgen")}

if args.commuter:
    data["commuter-loc"] \
        = {"analyzer": wc(args.commuter, r"(model|par-spec|progress|simsym|spec|symtypes|testgen|z3util)\.py"),
           "fsmodel": wc(args.commuter, r"fs\.py"),
           "fstestgen": wc(args.commuter, r"fs_testgen\.py")}

if args.mtrace:
    data["mtrace-loc"] \
        = {"qemu-diff": diff(args.mtrace, "v0.14.1..mtrace", r".*\.(c|h|hx)",
                             exclude="mtrace-tools/"),
           "mscan": diff(args.mtrace, "v0.14.1..mtrace",
                         r"mtrace-tools/.*\.(c|h|cc|hh)",
                         # Exclude mscan analyzers we don't use and
                         # some other stuff
                         exclude="mtrace-tools/(allsharing|asharing|cacheassoc|checkgc|dissys|false|sbw0|serlen|sysaccess|crud/|m2json|m2text)")}

if args.pk:
    data["pk-loc"] \
        = {"pk-diff": diff(args.pk, "v3.8..mtrace-v3.8", "",
                           # We already counted mtrace-magic in mtrace
                           exclude=".*/mtrace-magic.h")}

json.dump(data, file("const.json","w"), indent=2)
